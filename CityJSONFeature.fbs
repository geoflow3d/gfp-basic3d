namespace CityFB;

enum CityObjectType:short { Building, BuildingPart }
// enum GeometryType:short { MultiSurface, Solid }
union Boundary { gSolid, gMultiSurface }

struct Vertex {
  x:uint;
  y:uint;
  z:uint;
}

table CityJSONFeature {
  id:string;
  city_objects:[CityObject];
  vertices:[Vertex];
}

table CityObject {
  type:CityObjectType;
  id:string (key);
  attributes:[ubyte] (flexbuffer);
  geometry:[Geometry];
  children:[string];
  parent:string;
}

table Geometry {
  lod:string;
  // type:GeometryType;
  // boundaries:[ubyte] (flexbuffer);
  boundaries:[Boundary];
  semantics: [Semantic];
}

table gMultiSurface {
  surfaces:[gSurface];
}

table gSolid {
  shells:[gShell];
}

table gShell {
  surfaces:[gSurface];
}

table gSurface {
  rings:[gRing];
}

table gRing {
  indices:[uint];
}

table Semantic {
  surfaces:[Surface];
  values:[uint];
}

table Surface {
  type:string;
  on_footprint_edge:bool;
  // attributes:[ubyte] (flexbuffer);
}

root_type CityJSONFeature;
file_identifier "CFBF";
file_extension "city.fb";