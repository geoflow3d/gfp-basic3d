namespace CityFB;

enum CityObjectType:short { Building, BuildingPart }
// enum GeometryType:short { MultiSurface, Solid }
union Boundaries { Solid, MultiSurface }

struct Vertex {
  x:uint;
  y:uint;
  z:uint;
}

table CityJSONFeature {
  id:string;
  city_objects:[CityObject];
  vertices:[Vertex];
}

table CityObject {
  type:CityObjectType;
  id:string (key);
  attributes:[ubyte] (flexbuffer);
  geometry:[Geometry];
  children:[string];
  parent:string;
}

table Geometry {
  lod:string;
  // type:GeometryType;
  // boundaries:[ubyte] (flexbuffer);
  boundaries:Boundaries;
  semantics:GeometrySemantics;
}

table MultiSurface {
  surfaces:[Surface];
}

table Solid {
  shells:[Shell];
}

table Shell {
  surfaces:[Surface];
}

table Surface {
  rings:[Ring];
}

table Ring {
  indices:[uint];
}

table GeometrySemantics {
  surfaces:[SemanticSurface];
  values:[uint];
}

table SemanticSurface {
  type:string;
  on_footprint_edge:bool;
  // attributes:[ubyte] (flexbuffer);
}

root_type CityJSONFeature;
file_identifier "CFBF";
file_extension "city.fb";